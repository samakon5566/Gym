@model prjGymEndTerm.Models.CScore
@{
    ViewData["Title"] = "backScoreAnalysis";
    Layout = "~/Views/Shared/_BackstageLayout.cshtml";
}

<style>
    .coachTitle {
        position: absolute;
        width: 100%;
        text-align: center;
        font-weight: 800;
        /*margin:0 0 0 500px*/
    }

    #myTable {
        margin: 15px 0;
        /*border: 1px solid #D0D0D0;*/
        /*padding:10px 0 0 0*/
    }
    /*    tr {
        border-bottom: 2px solid gray;
    }*/
    th {
        text-align: center;
        width: 100px;
        /*background-color: #FBFBFF;*/
        height: 40px
    }

    td {
        text-align: center;
    }

    .table {
        width: 1300px;
        border: 1px solid #D0D0D0;
        background-color: #FCFCFC
    }

    .backTh {
        width: 100px
    }


    .backCBody {
        padding: 50px 0 0 80px;
        width: 1280px
    }

    .frame {
        position: relative;
        display: flex;
        justify-content: space-between;
    }

    .form {
        display: inline;
        position: absolute;
        right: 0;
    }

    body {
        background-color: #efeff6
    }

    .divnone {
        height: 40px
    }

    .addbtn {
        margin: 10px 0 0 0
    }

    .thCount {
        width: 7%
    }

    .thbtn {
        width: 15%
    }

    .th10 {
        width: 10%
    }

    .page-breadcrumb {
        margin: 60px 0 15px 0;
    }

    .breadcrumb-item {
        font-size: 15px
    }

    #myTable th {
        background-color: #4F4F4F;
        color: white;
        height: 90%
    }

    #myTable a {
        font-size: 12px
    }
    #title th {
        font-weight: 900
    }
</style>


<div class="backCBody">
    <div class="frame">
        <h1 class="coachTitle">評論分析</h1>
    </div>

    <div class="page-breadcrumb">
        <nav aria-label="breadcrumb" style="border-top: 1px solid #ADADAD ">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href=@Url.Action("List", "BackHome") class="breadcrumb-link">首頁</a></li>
                <li class="breadcrumb-item"><a href=@Url.Action("backScoreList", "Backstage") class="breadcrumb-link">評論管理</a></li>
                <li class="breadcrumb-item active" aria-current="page">評論分析</li>
            </ol>
        </nav>
    </div>

    <div class="m-b-20 m-t-10">
        <table class="table table-hover ">
            <thead>
                <tr ><th colspan="5" style="font-weight:900;font-size:20px">評論 ５顆★ 排行榜</th></tr>
                <tr id="title">
                    <th>第１名</th>
                    <th>第２名</th>
                    <th>第３名</th>
                    <th>第４名</th>
                    <th>第５名</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    @{
                        for (int i = 0; i < @Model.coachPicture.Count(); i++)
                        {
                            <td>
                                <img src="~/img/LoginFigure/@Model.coachPicture[i]" width="90" height="90" />
                            </td>
                        }
                    }
                </tr>
                <tr>
                    @{ 
                        for (int i = 0; i < @Model.coachName.Count(); i++)
                        {
                    <td>
                        @Model.coachName[i]
                    </td>
                            } 
                        }
                </tr>
                <tr>
                    @{
                        for (int i = 0; i < @Model.coachScore5Count.Count(); i++)
                        {
                            <td>
                                @Model.coachScore5Count[i] 次
                            </td>
                        }
                    }
                </tr>
            </tbody>
        </table>
    </div>

    <div class="row" style="display:flex;justify-content:center">

        <div class="col-xl-5 col-lg-6 col-md-6 col-sm-12 col-12 m-r-25">
            <div class="card">
                <div class="card-header ">
                    <h5 class="mb-0 " style="display:inline;font-weight:900">課程評論</h5>
                    <div style="display:inline;float:right;width:30%;margin-left:20px">
                        <label class="control-label">種類：</label>
                        <select id="categorySelect" class="form-select" style="width:65%"></select>
                    </div>
                    <div style="display:inline;float:right">
                        <label class="control-label">年度：</label>
                        <select id="yearSelect" class="form-select"></select>
                    </div>
                </div>
                <div class="card-body" id="container1">
                    <canvas id="scoreChart" height="200" width="350"></canvas>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-lg-12 col-md-6 col-sm-12 col-12 m-l-25 m-r-25">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0" style="display:inline;font-weight:900">教練評論</h5>

                    <div style="display:inline;float:right">
                        <label class="control-label">年度：</label>
                        <select id="yearSelect2" class="form-select" ></select>
                    </div>
                    <div class="m-t-10" style="display:flex;justify-content:end">
                        <label class="control-label">教練：</label>
                        <select id="coachSelect" class="form-select" style="height:25px;width:28%"></select>

                    </div>
                </div>
                <div class="card-body " id="container2">
                    <canvas id="coachChart" height="200" ></canvas>
                </div>
            </div>
        </div>

    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>

<script>
    //初始畫面的圖表
    var ctx1 = document.getElementById('scoreChart').getContext('2d');
    var ctx2 = document.getElementById('coachChart').getContext('2d');

    var chart = new Chart(ctx1, {
        type: 'bar',
        data: {
            labels: ['1顆★', '2顆★', '3顆★', '4顆★', '5顆★'],
            datasets: [{
                backgroundColor: [
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                ],
                borderColor: [
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(54, 162, 235, 1)',
                ],
                borderWidth: 1,
                label: '數量累計',
                data:
                    [@Html.DisplayFor(model => model.score1Count), @Html.DisplayFor(model => model.score2Count),@Html.DisplayFor(model => model.score3Count),
                @Html.DisplayFor(model => model.score4Count),@Html.DisplayFor(model => model.score5Count),0
                ]
                }]
                }
    });

    var chart = new Chart(ctx2, {
        type: 'doughnut',
        data: {
            labels: ['1顆★', '2顆★', '3顆★', '4顆★', '5顆★'],
            datasets: [{
                backgroundColor: [
                    'rgba(122, 122, 122, 0.3)',
                    'rgba(1, 178, 104, 0.3)',
                    'rgba(255, 143, 87, 0.3)',
                    'rgba(0, 127, 255, 0.3)',
                    'rgba(255, 46, 46, 0.3)',
                ],
                borderColor: [
                    'rgba(122, 122, 122, 1)',
                    'rgba(1, 178, 104, 1)',
                    'rgba(255, 143, 87, 1)',
                    'rgba(0, 127, 255, 1)',
                    'rgba(255, 46, 46, 1)',
                ],
                borderWidth: 1,
                label: '數量累計',
                data:
                    [@Html.DisplayFor(model => model.score1Count), @Html.DisplayFor(model => model.score2Count),@Html.DisplayFor(model => model.score3Count),
                @Html.DisplayFor(model => model.score4Count),@Html.DisplayFor(model => model.score5Count),0
                ]
                }]
                }
                });

</script>

<script>
    const yearSelect = document.querySelector('#yearSelect')
    const yearSelect2 = document.querySelector('#yearSelect2')
    const coachSelect = document.querySelector('#coachSelect')
    const categorySelect = document.querySelector('#categorySelect')


    Load();

    async function Load() {

        //yearSelect
        const yearSelectResponse = await fetch('@Url.Content("~/BackApi/scoreYearsSelect")')
        const yearSelectDatas = await yearSelectResponse.json()
        renderYearSelect(yearSelectDatas)

        //categorySelect
        const categoryResponse = await fetch('@Url.Content("~/BackApi/categorySelect")')
        const categoryDatas = await categoryResponse.json()
        renderCategorySelect(categoryDatas)

        //coachSelect
        const coachSelectResponse = await fetch('@Url.Content("~/BackApi/scoreCoachSelect")')
        const coachSelectDatas = await coachSelectResponse.json()
        renderCoachSelect(coachSelectDatas)
    }

    function renderYearSelect(datas) {

        const opt0 = new Option('ALL',0)
        yearSelect.options.add(opt0)
        const opt00 = new Option('ALL', 0)
        yearSelect2.options.add(opt00)

        datas.forEach((item) => {
            //console.log(item)
            const opt = new Option(`${item}年`, item)
            yearSelect.options.add(opt)
            const opt2 = new Option(`${item}年`, item)
            yearSelect2.options.add(opt2)

        })
    }

    function renderCoachSelect(datas) {

        const opt0 = new Option('ALL', 0)
        coachSelect.options.add(opt0)

        datas.forEach((item) => {
            console.log(item)
            const opt = new Option(item.logInName, item.logInId)
            coachSelect.options.add(opt)
        })
    }

    function renderCategorySelect(datas) {

        const opt0 = new Option('ALL', 0)
        categorySelect.options.add(opt0)

        datas.forEach((item) => {
            const opt = new Option(item.courseCategoryName, item.courseCategoryId)
            categorySelect.options.add(opt)
        })
    }



    //左邊圖表 year下拉選單改變
    yearSelect.addEventListener('change', async function () {

        $('#scoreChart').remove();
        $('#container1').append('<canvas id="scoreChart" height="200" width="350"></canvas>');
        container1 = document.getElementById("scoreChart");
        context = container1.getContext("2d");

        const year = $('#yearSelect').val();
        const categoryID = $('#categorySelect').val();

        const categoryResponse = await fetch('@Url.Content("~/BackApi/scoreCategoryCount?year=")' + year + '&categoryID=' + categoryID)
        const categoryDatas = await categoryResponse.json()
        console.log(categoryDatas)

        var ctx = document.getElementById('scoreChart').getContext('2d');

        var chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['1顆★', '2顆★', '3顆★', '4顆★', '5顆★'],
            datasets: [{
                backgroundColor: [
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                ],
                borderColor: [
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(54, 162, 235, 1)',
                ],
                borderWidth: 1,
                label: '數量累計',
                data: categoryDatas

                }]
                }
                });
    })

    //左邊圖表 category下拉選單改變
    categorySelect.addEventListener('change', async function () {

        $('#scoreChart').remove();
        $('#container1').append('<canvas id="scoreChart" height="200" width="350"></canvas>');
        container1 = document.getElementById("scoreChart");
        context = container1.getContext("2d");

        const year = $('#yearSelect').val();
        const categoryID = $('#categorySelect').val();

        const categoryResponse = await fetch('@Url.Content("~/BackApi/scoreCategoryCount?year=")' + year + '&categoryID=' + categoryID)
        const categoryDatas = await categoryResponse.json()
        console.log(categoryDatas)

        var ctx = document.getElementById('scoreChart').getContext('2d');

        var chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['1顆★', '2顆★', '3顆★', '4顆★', '5顆★'],
            datasets: [{
                backgroundColor: [
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                ],
                borderColor: [
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(54, 162, 235, 1)',
                ],
                borderWidth: 1,
                label: '數量累計',
                data: categoryDatas

                }]
                }
                });
    })


    //右邊圖表 year下拉選單改變
    yearSelect2.addEventListener('change', async function () {

        $('#coachChart').remove();
        $('#container2').append('<canvas id="coachChart" height="200" width="200"></canvas>');
        container2 = document.getElementById("coachChart");
        context = container2.getContext("2d");

        const year = $('#yearSelect2').val(); //2021
        const coachID = $('#coachSelect').val(); //17

        const coachResponse = await fetch('@Url.Content("~/BackApi/scoreCoachCount?year=")' + year + '&coachID=' + coachID)
        const coachDatas = await coachResponse.json()
        //console.log(coachDatas)

        var ctx = document.getElementById('coachChart').getContext('2d');

        var chart = new Chart(ctx, {
            type: 'doughnut',
        data: {
            labels: ['1顆★', '2顆★', '3顆★', '4顆★', '5顆★'],
            datasets: [{
                backgroundColor: [
                    'rgba(122, 122, 122, 0.3)',
                    'rgba(1, 178, 104, 0.3)',
                    'rgba(255, 143, 87, 0.3)',
                    'rgba(0, 127, 255, 0.3)',
                    'rgba(255, 46, 46, 0.3)',
                ],
                borderColor: [
                    'rgba(122, 122, 122, 1)',
                    'rgba(1, 178, 104, 1)',
                    'rgba(255, 143, 87, 1)',
                    'rgba(0, 127, 255, 1)',
                    'rgba(255, 46, 46, 1)',
                ],
                borderWidth: 1,
                label: '數量累計',
                data: coachDatas

                }]
                }
                });
    })

    //右邊圖表 coach下拉選單改變
    coachSelect.addEventListener('change', async function () {

        $('#coachChart').remove();
        $('#container2').append('<canvas id="coachChart" height="200" width="200"></canvas>');
        container2 = document.getElementById("coachChart");
        context = container2.getContext("2d");

        const year = $('#yearSelect2').val(); //2021
        const coachID = $('#coachSelect').val(); //17

        const coachResponse = await fetch('@Url.Content("~/BackApi/scoreCoachCount?year=")' + year + '&coachID=' + coachID)
        const coachDatas = await coachResponse.json()
        //console.log(coachDatas)

        var ctx = document.getElementById('coachChart').getContext('2d');

        var chart = new Chart(ctx, {
            type: 'doughnut',
        data: {
            labels: ['1顆★', '2顆★', '3顆★', '4顆★', '5顆★'],
            datasets: [{
                backgroundColor: [
                    'rgba(122, 122, 122, 0.3)',
                    'rgba(1, 178, 104, 0.3)',
                    'rgba(255, 143, 87, 0.3)',
                    'rgba(0, 127, 255, 0.3)',
                    'rgba(255, 46, 46, 0.3)',
                ],
                borderColor: [
                    'rgba(122, 122, 122, 1)',
                    'rgba(1, 178, 104, 1)',
                    'rgba(255, 143, 87, 1)',
                    'rgba(0, 127, 255, 1)',
                    'rgba(255, 46, 46, 1)',
                ],
                borderWidth: 1,
                label: '數量累計',
                data: coachDatas

                }]
                }
                });
    })



</script>
